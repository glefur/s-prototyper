/*
* generated by Xtext
*/
grammar InternalSPrototyper;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.obeo.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.obeo.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.obeo.dsl.services.SPrototyperGrammarAccess;

}

@parser::members {

 	private SPrototyperGrammarAccess grammarAccess;
 	
    public InternalSPrototyperParser(TokenStream input, SPrototyperGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SPrototyper";	
   	}
   	
   	@Override
   	protected SPrototyperGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSPrototyper
entryRuleSPrototyper returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPrototyperRule()); }
	 iv_ruleSPrototyper=ruleSPrototyper 
	 { $current=$iv_ruleSPrototyper.current; } 
	 EOF 
;

// Rule SPrototyper
ruleSPrototyper returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='proto' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSPrototyperAccess().getProtoKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSPrototyperAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPrototyperRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSPrototyperAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='qualifier' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSPrototyperAccess().getQualifierKeyword_3_0());
    }
(
(
		lv_qualifier_4_0=RULE_STRING
		{
			newLeafNode(lv_qualifier_4_0, grammarAccess.getSPrototyperAccess().getQualifierSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPrototyperRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"qualifier",
        		lv_qualifier_4_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSPrototyperAccess().getViewpointsSPViewpointParserRuleCall_4_0()); 
	    }
		lv_viewpoints_5_0=ruleSPViewpoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSPrototyperRule());
	        }
       		add(
       			$current, 
       			"viewpoints",
        		lv_viewpoints_5_0, 
        		"SPViewpoint");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSPrototyperAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSPViewpoint
entryRuleSPViewpoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPViewpointRule()); }
	 iv_ruleSPViewpoint=ruleSPViewpoint 
	 { $current=$iv_ruleSPViewpoint.current; } 
	 EOF 
;

// Rule SPViewpoint
ruleSPViewpoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='viewpoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSPViewpointAccess().getViewpointKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSPViewpointAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPViewpointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSPViewpointAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='shortcut' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSPViewpointAccess().getShortcutKeyword_3_0());
    }
(
(
		lv_shortcut_4_0=RULE_STRING
		{
			newLeafNode(lv_shortcut_4_0, grammarAccess.getSPViewpointAccess().getShortcutSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPViewpointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"shortcut",
        		lv_shortcut_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='ext' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSPViewpointAccess().getExtKeyword_4_0());
    }
(
(
		lv_extension_6_0=RULE_STRING
		{
			newLeafNode(lv_extension_6_0, grammarAccess.getSPViewpointAccess().getExtensionSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPViewpointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"extension",
        		lv_extension_6_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSPViewpointAccess().getRepresentationsSPRepresentationParserRuleCall_5_0()); 
	    }
		lv_representations_7_0=ruleSPRepresentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSPViewpointRule());
	        }
       		add(
       			$current, 
       			"representations",
        		lv_representations_7_0, 
        		"SPRepresentation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSPViewpointAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleSPRepresentation
entryRuleSPRepresentation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPRepresentationRule()); }
	 iv_ruleSPRepresentation=ruleSPRepresentation 
	 { $current=$iv_ruleSPRepresentation.current; } 
	 EOF 
;

// Rule SPRepresentation
ruleSPRepresentation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSPRepresentationAccess().getSPTableParserRuleCall_0()); 
    }
    this_SPTable_0=ruleSPTable
    { 
        $current = $this_SPTable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSPRepresentationAccess().getSPDiagramParserRuleCall_1()); 
    }
    this_SPDiagram_1=ruleSPDiagram
    { 
        $current = $this_SPDiagram_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSPTable
entryRuleSPTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPTableRule()); }
	 iv_ruleSPTable=ruleSPTable 
	 { $current=$iv_ruleSPTable.current; } 
	 EOF 
;

// Rule SPTable
ruleSPTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='table' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSPTableAccess().getTableKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSPTableAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSPTableAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSPTableAccess().getLabelKeyword_3_0());
    }
(
(
		lv_label_4_0=RULE_STRING
		{
			newLeafNode(lv_label_4_0, grammarAccess.getSPTableAccess().getLabelSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSPTableAccess().getTitleKeyword_4_0());
    }
(
(
		lv_title_6_0=RULE_STRING
		{
			newLeafNode(lv_title_6_0, grammarAccess.getSPTableAccess().getTitleSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSPTableAccess().getMetamodelsMetamodelRefParserRuleCall_5_0()); 
	    }
		lv_metamodels_7_0=ruleMetamodelRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSPTableRule());
	        }
       		add(
       			$current, 
       			"metamodels",
        		lv_metamodels_7_0, 
        		"MetamodelRef");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_8='root' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSPTableAccess().getRootKeyword_6());
    }
(
(
		lv_root_9_0=RULE_STRING
		{
			newLeafNode(lv_root_9_0, grammarAccess.getSPTableAccess().getRootSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"root",
        		lv_root_9_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSPTableAccess().getElementsTableElementParserRuleCall_8_0()); 
	    }
		lv_elements_10_0=ruleTableElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSPTableRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_10_0, 
        		"TableElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getSPTableAccess().getPropertiesTablePropertyParserRuleCall_9_0()); 
	    }
		lv_properties_11_0=ruleTableProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSPTableRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_11_0, 
        		"TableProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSPTableAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleTableElement
entryRuleTableElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableElementRule()); }
	 iv_ruleTableElement=ruleTableElement 
	 { $current=$iv_ruleTableElement.current; } 
	 EOF 
;

// Rule TableElement
ruleTableElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_creatable_0_0=	'creatable' 
    {
        newLeafNode(lv_creatable_0_0, grammarAccess.getTableElementAccess().getCreatableCreatableKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableElementRule());
	        }
       		setWithLastConsumed($current, "creatable", true, "creatable");
	    }

)
)?(
(
		lv_recursive_1_0=	'recursive' 
    {
        newLeafNode(lv_recursive_1_0, grammarAccess.getTableElementAccess().getRecursiveRecursiveKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableElementRule());
	        }
       		setWithLastConsumed($current, "recursive", true, "recursive");
	    }

)
)?	otherlv_2='element' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTableElementAccess().getElementKeyword_2());
    }
(
(
		lv_eClass_3_0=RULE_STRING
		{
			newLeafNode(lv_eClass_3_0, grammarAccess.getTableElementAccess().getEClassSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"eClass",
        		lv_eClass_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='accessibleThrough' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableElementAccess().getAccessibleThroughKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableElementAccess().getExpressionSPExpressionParserRuleCall_5_0()); 
	    }
		lv_expression_5_0=ruleSPExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableElementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"SPExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTableElementAccess().getLeftCurlyBracketKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableElementAccess().getSubElementsTableElementParserRuleCall_6_1_0()); 
	    }
		lv_subElements_7_0=ruleTableElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableElementRule());
	        }
       		add(
       			$current, 
       			"subElements",
        		lv_subElements_7_0, 
        		"TableElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTableElementAccess().getRightCurlyBracketKeyword_6_2());
    }
)?)
;





// Entry rule entryRuleTableProperty
entryRuleTableProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTablePropertyRule()); }
	 iv_ruleTableProperty=ruleTableProperty 
	 { $current=$iv_ruleTableProperty.current; } 
	 EOF 
;

// Rule TableProperty
ruleTableProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='property' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTablePropertyAccess().getPropertyKeyword_0());
    }
(
(
		lv_feature_1_0=RULE_STRING
		{
			newLeafNode(lv_feature_1_0, grammarAccess.getTablePropertyAccess().getFeatureSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTablePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature",
        		lv_feature_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='label' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTablePropertyAccess().getLabelKeyword_2_0());
    }
(
(
		lv_label_3_0=RULE_STRING
		{
			newLeafNode(lv_label_3_0, grammarAccess.getTablePropertyAccess().getLabelSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTablePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_3_0, 
        		"STRING");
	    }

)
))?(	otherlv_4='expression' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTablePropertyAccess().getExpressionKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTablePropertyAccess().getExpressionSPExpressionParserRuleCall_3_1_0()); 
	    }
		lv_expression_5_0=ruleSPExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTablePropertyRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"SPExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleSPDiagram
entryRuleSPDiagram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPDiagramRule()); }
	 iv_ruleSPDiagram=ruleSPDiagram 
	 { $current=$iv_ruleSPDiagram.current; } 
	 EOF 
;

// Rule SPDiagram
ruleSPDiagram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='diagram' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSPDiagramAccess().getDiagramKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSPDiagramAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPDiagramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSPDiagramAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSPDiagramAccess().getLabelKeyword_3_0());
    }
(
(
		lv_label_4_0=RULE_STRING
		{
			newLeafNode(lv_label_4_0, grammarAccess.getSPDiagramAccess().getLabelSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPDiagramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSPDiagramAccess().getTitleKeyword_4_0());
    }
(
(
		lv_title_6_0=RULE_STRING
		{
			newLeafNode(lv_title_6_0, grammarAccess.getSPDiagramAccess().getTitleSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPDiagramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSPDiagramAccess().getMetamodelsMetamodelRefParserRuleCall_5_0()); 
	    }
		lv_metamodels_7_0=ruleMetamodelRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSPDiagramRule());
	        }
       		add(
       			$current, 
       			"metamodels",
        		lv_metamodels_7_0, 
        		"MetamodelRef");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_8='root' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSPDiagramAccess().getRootKeyword_6());
    }
(
(
		lv_root_9_0=RULE_STRING
		{
			newLeafNode(lv_root_9_0, grammarAccess.getSPDiagramAccess().getRootSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPDiagramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"root",
        		lv_root_9_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSPDiagramAccess().getElementsDiagramElementParserRuleCall_8_0()); 
	    }
		lv_elements_10_0=ruleDiagramElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSPDiagramRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_10_0, 
        		"DiagramElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSPDiagramAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleDiagramElement
entryRuleDiagramElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDiagramElementRule()); }
	 iv_ruleDiagramElement=ruleDiagramElement 
	 { $current=$iv_ruleDiagramElement.current; } 
	 EOF 
;

// Rule DiagramElement
ruleDiagramElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getDiagramElementAccess().getContainerParserRuleCall()); 
    }
    this_Container_0=ruleContainer
    { 
        $current = $this_Container_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleContainer
entryRuleContainer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContainerRule()); }
	 iv_ruleContainer=ruleContainer 
	 { $current=$iv_ruleContainer.current; } 
	 EOF 
;

// Rule Container
ruleContainer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getContainerAccess().getContainerTypeContainerTypeParserRuleCall_0_0()); 
	    }
		lv_containerType_0_0=ruleContainerType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainerRule());
	        }
       		set(
       			$current, 
       			"containerType",
        		lv_containerType_0_0, 
        		"ContainerType");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='container' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContainerAccess().getContainerKeyword_1());
    }
(
(
		lv_eClass_2_0=RULE_STRING
		{
			newLeafNode(lv_eClass_2_0, grammarAccess.getContainerAccess().getEClassSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"eClass",
        		lv_eClass_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='accessibleThrough' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getContainerAccess().getAccessibleThroughKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainerAccess().getExpressionSPExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleSPExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainerRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"SPExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='style {' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getContainerAccess().getStyleKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainerAccess().getColorContainerColorDefinitionParserRuleCall_6_0()); 
	    }
		lv_color_6_0=ruleContainerColorDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainerRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_6_0, 
        		"ContainerColorDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getContainerAccess().getLabelLabelStyleDefinitionParserRuleCall_7_0()); 
	    }
		lv_label_7_0=ruleLabelStyleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainerRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_7_0, 
        		"LabelStyleDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getContainerAccess().getBorderBorderStyleDefinitionParserRuleCall_8_0()); 
	    }
		lv_border_8_0=ruleBorderStyleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainerRule());
	        }
       		set(
       			$current, 
       			"border",
        		lv_border_8_0, 
        		"BorderStyleDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getContainerAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleContainerType
entryRuleContainerType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getContainerTypeRule()); } 
	 iv_ruleContainerType=ruleContainerType 
	 { $current=$iv_ruleContainerType.current.getText(); }  
	 EOF 
;

// Rule ContainerType
ruleContainerType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='freeform' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getContainerTypeAccess().getFreeformKeyword_0()); 
    }

    |
	kw='list' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getContainerTypeAccess().getListKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleSolidColorDefinition
entryRuleSolidColorDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSolidColorDefinitionRule()); }
	 iv_ruleSolidColorDefinition=ruleSolidColorDefinition 
	 { $current=$iv_ruleSolidColorDefinition.current; } 
	 EOF 
;

// Rule SolidColorDefinition
ruleSolidColorDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='color' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSolidColorDefinitionAccess().getColorKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSolidColorDefinitionAccess().getColorColorParserRuleCall_1_0()); 
	    }
		lv_color_1_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSolidColorDefinitionRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_1_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleContainerColorDefinition
entryRuleContainerColorDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContainerColorDefinitionRule()); }
	 iv_ruleContainerColorDefinition=ruleContainerColorDefinition 
	 { $current=$iv_ruleContainerColorDefinition.current; } 
	 EOF 
;

// Rule ContainerColorDefinition
ruleContainerColorDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getContainerColorDefinitionAccess().getSolidColorDefinitionParserRuleCall_0()); 
    }
    this_SolidColorDefinition_0=ruleSolidColorDefinition
    { 
        $current = $this_SolidColorDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContainerColorDefinitionAccess().getGradientColorDefinitionParserRuleCall_1()); 
    }
    this_GradientColorDefinition_1=ruleGradientColorDefinition
    { 
        $current = $this_GradientColorDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGradientColorDefinition
entryRuleGradientColorDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGradientColorDefinitionRule()); }
	 iv_ruleGradientColorDefinition=ruleGradientColorDefinition 
	 { $current=$iv_ruleGradientColorDefinition.current; } 
	 EOF 
;

// Rule GradientColorDefinition
ruleGradientColorDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='gradient from' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGradientColorDefinitionAccess().getGradientFromKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGradientColorDefinitionAccess().getFromColorParserRuleCall_1_0()); 
	    }
		lv_from_1_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGradientColorDefinitionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_1_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGradientColorDefinitionAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGradientColorDefinitionAccess().getToColorParserRuleCall_3_0()); 
	    }
		lv_to_3_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGradientColorDefinitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_3_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLabelStyleDefinition
entryRuleLabelStyleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelStyleDefinitionRule()); }
	 iv_ruleLabelStyleDefinition=ruleLabelStyleDefinition 
	 { $current=$iv_ruleLabelStyleDefinition.current; } 
	 EOF 
;

// Rule LabelStyleDefinition
ruleLabelStyleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='label' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLabelStyleDefinitionAccess().getLabelKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabelStyleDefinitionAccess().getExpressionSPExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleSPExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabelStyleDefinitionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"SPExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getLabelStyleDefinitionAccess().getColorSolidColorDefinitionParserRuleCall_2_0()); 
	    }
		lv_color_2_0=ruleSolidColorDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabelStyleDefinitionRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_2_0, 
        		"SolidColorDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='size' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLabelStyleDefinitionAccess().getSizeKeyword_3_0());
    }
(
(
		lv_size_4_0=RULE_INT
		{
			newLeafNode(lv_size_4_0, grammarAccess.getLabelStyleDefinitionAccess().getSizeINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelStyleDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_4_0, 
        		"INT");
	    }

)
))?(
(
		lv_bold_5_0=	'bold' 
    {
        newLeafNode(lv_bold_5_0, grammarAccess.getLabelStyleDefinitionAccess().getBoldBoldKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelStyleDefinitionRule());
	        }
       		setWithLastConsumed($current, "bold", true, "bold");
	    }

)
)?(
(
		lv_italic_6_0=	'italic' 
    {
        newLeafNode(lv_italic_6_0, grammarAccess.getLabelStyleDefinitionAccess().getItalicItalicKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelStyleDefinitionRule());
	        }
       		setWithLastConsumed($current, "italic", true, "italic");
	    }

)
)?)
;





// Entry rule entryRuleBorderStyleDefinition
entryRuleBorderStyleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBorderStyleDefinitionRule()); }
	 iv_ruleBorderStyleDefinition=ruleBorderStyleDefinition 
	 { $current=$iv_ruleBorderStyleDefinition.current; } 
	 EOF 
;

// Rule BorderStyleDefinition
ruleBorderStyleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='border ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBorderStyleDefinitionAccess().getBorderKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderStyleDefinitionAccess().getColorSolidColorDefinitionParserRuleCall_1_0()); 
	    }
		lv_color_1_0=ruleSolidColorDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderStyleDefinitionRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_1_0, 
        		"SolidColorDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='size' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBorderStyleDefinitionAccess().getSizeKeyword_2_0());
    }
(
(
		lv_size_3_0=RULE_INT
		{
			newLeafNode(lv_size_3_0, grammarAccess.getBorderStyleDefinitionAccess().getSizeINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderStyleDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"INT");
	    }

)
))?)
;





// Entry rule entryRuleSPExpression
entryRuleSPExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPExpressionRule()); }
	 iv_ruleSPExpression=ruleSPExpression 
	 { $current=$iv_ruleSPExpression.current; } 
	 EOF 
;

// Rule SPExpression
ruleSPExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSPExpressionAccess().getAcceleoExpressionParserRuleCall_0()); 
    }
    this_AcceleoExpression_0=ruleAcceleoExpression
    { 
        $current = $this_AcceleoExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSPExpressionAccess().getVarRefParserRuleCall_1()); 
    }
    this_VarRef_1=ruleVarRef
    { 
        $current = $this_VarRef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSPExpressionAccess().getFeatureRefParserRuleCall_2()); 
    }
    this_FeatureRef_2=ruleFeatureRef
    { 
        $current = $this_FeatureRef_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAcceleoExpression
entryRuleAcceleoExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAcceleoExpressionRule()); }
	 iv_ruleAcceleoExpression=ruleAcceleoExpression 
	 { $current=$iv_ruleAcceleoExpression.current; } 
	 EOF 
;

// Rule AcceleoExpression
ruleAcceleoExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='acc:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAcceleoExpressionAccess().getAccKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getAcceleoExpressionAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAcceleoExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleVarRef
entryRuleVarRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarRefRule()); }
	 iv_ruleVarRef=ruleVarRef 
	 { $current=$iv_ruleVarRef.current; } 
	 EOF 
;

// Rule VarRef
ruleVarRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='var:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVarRefAccess().getVarKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getVarRefAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFeatureRef
entryRuleFeatureRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRefRule()); }
	 iv_ruleFeatureRef=ruleFeatureRef 
	 { $current=$iv_ruleFeatureRef.current; } 
	 EOF 
;

// Rule FeatureRef
ruleFeatureRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='feature:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeatureRefAccess().getFeatureKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getFeatureRefAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleMetamodelRef
entryRuleMetamodelRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetamodelRefRule()); }
	 iv_ruleMetamodelRef=ruleMetamodelRef 
	 { $current=$iv_ruleMetamodelRef.current; } 
	 EOF 
;

// Rule MetamodelRef
ruleMetamodelRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='use' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMetamodelRefAccess().getUseKeyword_0());
    }
(
(
		lv_metamodel_1_0=RULE_STRING
		{
			newLeafNode(lv_metamodel_1_0, grammarAccess.getMetamodelRefAccess().getMetamodelSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetamodelRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"metamodel",
        		lv_metamodel_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleColor
entryRuleColor returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorRule()); } 
	 iv_ruleColor=ruleColor 
	 { $current=$iv_ruleColor.current.getText(); }  
	 EOF 
;

// Rule Color
ruleColor returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getColorAccess().getPreDefinedColorParserRuleCall()); 
    }
    this_PreDefinedColor_0=rulePreDefinedColor    {
		$current.merge(this_PreDefinedColor_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRulePreDefinedColor
entryRulePreDefinedColor returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreDefinedColorRule()); } 
	 iv_rulePreDefinedColor=rulePreDefinedColor 
	 { $current=$iv_rulePreDefinedColor.current.getText(); }  
	 EOF 
;

// Rule PreDefinedColor
rulePreDefinedColor returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='white' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getWhiteKeyword_0()); 
    }

    |
	kw='black' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getBlackKeyword_1()); 
    }

    |
	kw='blue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getBlueKeyword_2()); 
    }

    |
	kw='light blue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getLightBlueKeyword_3()); 
    }

    |
	kw='dark blue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getDarkBlueKeyword_4()); 
    }

    |
	kw='chocolate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getChocolateKeyword_5()); 
    }

    |
	kw='light chocolate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getLightChocolateKeyword_6()); 
    }

    |
	kw='dark chocolate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getDarkChocolateKeyword_7()); 
    }

    |
	kw='gray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getGrayKeyword_8()); 
    }

    |
	kw='light gray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getLightGrayKeyword_9()); 
    }

    |
	kw='dark gray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getDarkGrayKeyword_10()); 
    }

    |
	kw='green' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getGreenKeyword_11()); 
    }

    |
	kw='light green' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getLightGreenKeyword_12()); 
    }

    |
	kw='dark green' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getDarkGreenKeyword_13()); 
    }

    |
	kw='orange' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getOrangeKeyword_14()); 
    }

    |
	kw='light orange' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getLightOrangeKeyword_15()); 
    }

    |
	kw='dark orange' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getDarkOrangeKeyword_16()); 
    }

    |
	kw='purple' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getPurpleKeyword_17()); 
    }

    |
	kw='light purple' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getLightPurpleKeyword_18()); 
    }

    |
	kw='dark purple' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getDarkPurpleKeyword_19()); 
    }

    |
	kw='red' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getRedKeyword_20()); 
    }

    |
	kw='light red' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getLightRedKeyword_21()); 
    }

    |
	kw='dark red' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getDarkRedKeyword_22()); 
    }

    |
	kw='yellow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getYellowKeyword_23()); 
    }

    |
	kw='light yellow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getLightYellowKeyword_24()); 
    }

    |
	kw='dark yellow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPreDefinedColorAccess().getDarkYellowKeyword_25()); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


